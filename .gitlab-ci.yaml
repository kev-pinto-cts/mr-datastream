stages:
  - pre-commit-hooks
  - tag-release

pre-commit-hooks:
  tags:
    - docker
  stage: pre-commit-hooks
  script:
    - curl -sL https://rpm.nodesource.com/setup_10.x | bash -
    - yum install -y python3-pip nodejs git unzip
    - |
      curl -SOL https://releases.hashicorp.com/terraform/1.0.10/terraform_1.0.10_linux_amd64.zip
      unzip terraform_1.0.10_linux_amd64.zip
      mv -f terraform /usr/local/bin/
      rm terraform_1.0.10_linux_amd64.zip
    - |
      curl -SOL https://github.com/terraform-linters/tflint/releases/download/v0.43.0/tflint_linux_amd64.zip
      unzip tflint_linux_amd64.zip
      mv -f tflint /usr/local/bin/
      rm tflint_linux_amd64.zip
    - |
      curl -SOL https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-amd64.tar.gz
      tar -xzf terraform-docs-v0.16.0-linux-amd64.tar.gz
      chmod +x terraform-docs
      mv terraform-docs /usr/local/bin/
      rm terraform-docs-v0.16.0-linux-amd64.tar.gz
    - pip3 install pre-commit
    - npm install -g markdownlint-cli
    - pre-commit run

increment-tag:
  only:
    - main
  tags:
    - docker-engine # this runner has git installed
  stage: tag-release
  script:
    - CURRENT_VERSION="$(git describe --abbrev=0 --tags)"
    - VERSION_BITS=(${CURRENT_VERSION//./ })
    - MAJOR=${VERSION_BITS[0]}
    - MINOR=${VERSION_BITS[1]}
    - PATCH=${VERSION_BITS[2]}
    - NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH+1))"
    - echo "New version is $NEW_VERSION"
    - echo "Tagging ref $CI_COMMIT_SHA for project $CI_PROJECT_ID "
    - |
      curl -s \
      --request POST \
      --header "PRIVATE-TOKEN: ${TAG_TOKEN}" \
      --form ref=${CI_COMMIT_SHA} \
      --form tag_name=${NEW_VERSION} \
      https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/repository/tags
